syntax = "proto3";

package pb;

import "rpc_get_profile.proto";
import "rpc_create_profile.proto";
import "rpc_delete_profile.proto";
import "rpc_update_profile.proto";
import "rpc_list_all_profiles.proto";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/kyamalabs/users/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Users Service";
    version: "0";
    contact: {
      name: "Kyama Games";
      url: "https://kyamagames.com";
    };
  };
  security_definitions: {
    security: {
      key: "bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by Bearer: bearer <token>"
      }
    }
  };
  security: {
    security_requirement: {
      key: "bearer"
    }
  };
};

service Profiles {
  rpc CreateProfile(CreateProfileRequest) returns (CreateProfileResponse) {
    option (google.api.http) = {
      post: "/users/profiles"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Create a new user profile";
      summary: "Create User Profile";
    };
  }

  rpc GetProfile(GetProfileRequest) returns (GetProfileResponse) {
    option (google.api.http) = {
      get: "/users/profiles/{wallet_address}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Get a user's profile";
      summary: "Get User Profile";
    };
  }

  rpc GetPublicProfile(GetProfileRequest) returns (GetPublicProfileResponse) {
    option (google.api.http) = {
      get: "/users/profiles/public/{wallet_address}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Get a user's public profile";
      summary: "Get Public User Profile";
      security: {};
    };
  }

  rpc ListAllProfiles(ListAllProfilesRequest) returns (ListAllProfilesResponse) {
    option (google.api.http) = {
      get: "/users/profiles"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Fetch a paginated list of all user profiles";
      summary: "List All User Profiles";
      security: {};
    };
  }

  rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse) {
    option (google.api.http) = {
      put: "/users/profiles/{wallet_address}"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Update a user's profile";
      summary: "Update User Profile";
    };
  }

  rpc DeleteProfile(DeleteProfileRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/users/profiles/{wallet_address}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Delete a user's profile";
      summary: "Delete User Profile";
    };
  }
}
